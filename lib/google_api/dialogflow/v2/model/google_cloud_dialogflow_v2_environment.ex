# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Environment do
  @moduledoc """
  Represents an agent environment.

  ## Attributes

  *   `agentVersion` (*type:* `String.t`, *default:* `nil`) - Optional. The agent version loaded into this environment.
      Format: `projects/<Project ID>/agent/versions/<Version ID>`.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. The developer-provided description for this environment.
      The maximum length is 500 characters. If exceeded, the request is rejected.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The unique identifier of this agent environment.
      Format: `projects/<Project ID>/agent/environments/<Environment ID>`.
      For Environment ID, "-" is reserved for 'draft' environment.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of this environment. This field is read-only, i.e., it cannot be
      set by create and update methods.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The last update time of this environment. This field is read-only, i.e., it
      cannot be set by create and update methods.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :agentVersion => String.t(),
          :description => String.t(),
          :name => String.t(),
          :state => String.t(),
          :updateTime => DateTime.t()
        }

  field(:agentVersion)
  field(:description)
  field(:name)
  field(:state)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Environment do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Environment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Environment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
