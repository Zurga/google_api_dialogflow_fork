# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessage do
  @moduledoc """
  Represents a response message that can be returned by a conversational agent.

  Response messages are also used for output audio synthesis. The approach is
  as follows:

  * If at least one OutputAudioText response is present, then all
    OutputAudioText responses are linearly concatenated, and the result is used
    for output audio synthesis.
  * If the OutputAudioText responses are a mixture of text and SSML, then the
    concatenated result is treated as SSML; otherwise, the result is treated as
    either text or SSML as appropriate. The agent designer should ideally use
    either text or SSML consistently throughout the bot design.
  * Otherwise, all Text responses are linearly concatenated, and the result is
    used for output audio synthesis.

  This approach allows for more sophisticated user experience scenarios, where
  the text displayed to the user may differ from what is heard.

  ## Attributes

  *   `conversationSuccess` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess.t`, *default:* `nil`) - Indicates that the conversation succeeded.
  *   `humanAgentHandoff` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageHumanAgentHandoff.t`, *default:* `nil`) - Hands off conversation to a human agent.
  *   `payload` (*type:* `map()`, *default:* `nil`) - Returns a response containing a custom, platform-specific payload.
  *   `text` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageText.t`, *default:* `nil`) - Returns a text response.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :conversationSuccess =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess.t(),
          :humanAgentHandoff =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageHumanAgentHandoff.t(),
          :payload => map(),
          :text =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageText.t()
        }

  field(:conversationSuccess,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess
  )

  field(:humanAgentHandoff,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageHumanAgentHandoff
  )

  field(:payload, type: :map)

  field(:text, as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessageText)
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessage do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessage.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowCxV3beta1ResponseMessage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
