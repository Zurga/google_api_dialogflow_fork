# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ConversationModel do
  @moduledoc """
  Represents a conversation model.

  ## Attributes

  *   `articleSuggestionModelMetadata` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ArticleSuggestionModelMetadata.t`, *default:* `nil`) - Metadata for article suggestion models.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Creation time of this model.
  *   `datasets` (*type:* `list(GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1InputDataset.t)`, *default:* `nil`) - Required. Datasets used to create model.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Required. The display name of the model. At most 64 bytes long.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. ConversationModel resource name. Format:
      `projects/<Project ID>/conversationModels/<Conversation Model ID>`
  *   `smartReplyModelMetadata` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1SmartReplyModelMetadata.t`, *default:* `nil`) - Metadata for smart reply models.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. State of the model. A model can only serve prediction requests
      after it gets deployed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :articleSuggestionModelMetadata =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ArticleSuggestionModelMetadata.t(),
          :createTime => DateTime.t(),
          :datasets =>
            list(GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1InputDataset.t()),
          :displayName => String.t(),
          :name => String.t(),
          :smartReplyModelMetadata =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1SmartReplyModelMetadata.t(),
          :state => String.t()
        }

  field(
    :articleSuggestionModelMetadata,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ArticleSuggestionModelMetadata
  )

  field(:createTime, as: DateTime)

  field(
    :datasets,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1InputDataset,
    type: :list
  )

  field(:displayName)
  field(:name)

  field(
    :smartReplyModelMetadata,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1SmartReplyModelMetadata
  )

  field(:state)
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ConversationModel do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ConversationModel.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1ConversationModel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
